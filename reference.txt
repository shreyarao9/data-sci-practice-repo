1/730 --> 729 = 27^2 = 9^3 +1
3/1001 --> 10^3 +1
5/1332
7/1729

7,8,11,16,23
+1,+3

Before diving into Docker, Kubernetes, and other related technologies, it's helpful to have a foundational understanding of certain concepts and technologies in software development and system administration. Here's a list of prerequisites that can prepare you for learning about Docker, Kubernetes, and containerization:

1. **Operating Systems:** Familiarize yourself with basic concepts of operating systems, including processes, file systems, networking, and system administration tasks. Knowledge of Linux is particularly valuable since Docker and Kubernetes are commonly used on Linux-based systems.

2. **Networking:** Understand fundamental networking concepts such as IP addresses, ports, DNS, HTTP, TCP/IP, routing, firewalls, and load balancing. Networking plays a crucial role in containerized environments, especially in Kubernetes clusters.

3. **Command-Line Interface (CLI):** Develop proficiency in using the command-line interface (CLI) for tasks such as navigating the file system, running commands, managing processes, and configuring system settings. Docker and Kubernetes are primarily managed via the CLI.

4. **Version Control:** Learn how to use version control systems like Git for managing code repositories, tracking changes, collaborating with team members, and deploying applications. Version control is essential for managing containerized applications and infrastructure as code.

5. **Containerization Concepts:** Gain an understanding of containerization concepts and technologies, including the differences between virtual machines (VMs) and containers, container images, container runtimes, and container orchestration.

6. **Web Servers and Applications:** Familiarize yourself with web servers (e.g., Apache HTTP Server, Nginx) and web application development concepts (e.g., HTTP, HTML, CSS, JavaScript, RESTful APIs). Docker and Kubernetes are commonly used for deploying and managing web applications.

7. **Cloud Computing Basics:** Learn about cloud computing concepts, including Infrastructure as a Service (IaaS), Platform as a Service (PaaS), and Software as a Service (SaaS). Understanding cloud platforms like Amazon Web Services (AWS), Microsoft Azure, and Google Cloud Platform (GCP) can provide context for deploying containerized applications.

8. **Scripting and Automation:** Develop scripting skills in languages like Bash, Python, or PowerShell for automating common tasks, managing configurations, and interacting with APIs. Automation is essential for deploying and managing containerized environments at scale.

While these prerequisites are not mandatory for learning Docker, Kubernetes, and related technologies, having a solid foundation in these areas can make the learning process smoother and help you understand the underlying concepts more effectively. Additionally, many online resources and courses on Docker and Kubernetes assume familiarity with these concepts and technologies.